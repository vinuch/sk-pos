
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."Food_type" AS ENUM (
    'soup',
    'swallow',
    'protein(meat/fish)'
);

ALTER TYPE "public"."Food_type" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."MenuItems" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying,
    "price" bigint,
    "type" "public"."Food_type"
);

ALTER TABLE "public"."MenuItems" OWNER TO "postgres";

ALTER TABLE "public"."MenuItems" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."MenuItems_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."OrderItems" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "order_id" bigint,
    "menu_item_id" bigint
);

ALTER TABLE "public"."OrderItems" OWNER TO "postgres";

ALTER TABLE "public"."OrderItems" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."OrderItems_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Orders" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "total_amount" bigint,
    "payment_status" boolean,
    "payment_method" character varying
);

ALTER TABLE "public"."Orders" OWNER TO "postgres";

ALTER TABLE "public"."Orders" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Orders_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."MenuItems"
    ADD CONSTRAINT "MenuItems_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."OrderItems"
    ADD CONSTRAINT "OrderItems_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Orders"
    ADD CONSTRAINT "Orders_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."OrderItems"
    ADD CONSTRAINT "OrderItems_menu_item_id_fkey" FOREIGN KEY ("menu_item_id") REFERENCES "public"."MenuItems"("id");

ALTER TABLE ONLY "public"."OrderItems"
    ADD CONSTRAINT "OrderItems_order_id_fkey" FOREIGN KEY ("order_id") REFERENCES "public"."Orders"("id");

CREATE POLICY "Enable read access for all users" ON "public"."MenuItems" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."OrderItems" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."Orders" FOR SELECT USING (true);

ALTER TABLE "public"."MenuItems" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."OrderItems" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Orders" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."MenuItems" TO "anon";
GRANT ALL ON TABLE "public"."MenuItems" TO "authenticated";
GRANT ALL ON TABLE "public"."MenuItems" TO "service_role";

GRANT ALL ON SEQUENCE "public"."MenuItems_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."MenuItems_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."MenuItems_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."OrderItems" TO "anon";
GRANT ALL ON TABLE "public"."OrderItems" TO "authenticated";
GRANT ALL ON TABLE "public"."OrderItems" TO "service_role";

GRANT ALL ON SEQUENCE "public"."OrderItems_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."OrderItems_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."OrderItems_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Orders" TO "anon";
GRANT ALL ON TABLE "public"."Orders" TO "authenticated";
GRANT ALL ON TABLE "public"."Orders" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Orders_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Orders_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Orders_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
